name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          CI: true

      - name: Lint code
        run: npm run lint --if-present
        continue-on-error: true

      - name: Type check
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Build application
        run: npm run build
        env:
          CI: true
          VITE_ANALYZE: false

      - name: Check bundle size
        run: |
          echo "ðŸ“¦ Build size analysis:"
          du -sh dist/
          echo ""
          echo "Files in dist:"
          find dist -type f -exec ls -lh {} \; | awk '{print $5, $9}'

      - name: Upload to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'dist'

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  performance:
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for analysis
        run: npm run build

      - name: Analyze performance metrics
        run: |
          echo "âš¡ Performance Metrics:"
          echo "====================="

          # Check file sizes
          echo ""
          echo "File sizes:"
          ls -lh dist/assets/ 2>/dev/null | awk 'NR>1 {print "  " $9 ": " $5}'

          # Count JS files
          echo ""
          echo "JavaScript chunks:"
          ls -1 dist/assets/*.js 2>/dev/null | wc -l

          # Check gzip size
          echo ""
          echo "Gzip sizes:"
          for file in dist/assets/*.js; do
            if [ -f "$file" ]; then
              gzip_size=$(gzip -c "$file" | wc -c)
              echo "  $(basename $file): $(echo "scale=2; $gzip_size / 1024" | bc) KB"
            fi
          done

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Build completed successfully!\n\nThe application has been built with production optimizations including:\n- Code splitting for better caching\n- Terser minification with dropped console statements\n- Modern browser target (ES2020)\n- Optimized vendor chunks\n\nYour app is ready for deployment on GitHub Pages!'
            })
